
[
{"id":1,"topic":"Variables","difficulty":"basic","question":"Which of the following is a valid variable name in Python?","choices":["1variable","variable_name","variable-name","variable name"],"answerIndex":1,"explanation":"Variable names in Python must start with a letter or underscore and cannot contain spaces or hyphens. Thus, 'variable_name' is valid."},
{"id":2,"topic":"Variables","difficulty":"basic","question":"What will be the output of the following code?\n\nx = 5\ny = x\nx = 10\nprint(y)","choices":["5","10","None","Error"],"answerIndex":0,"explanation":"Variables in Python store values by reference. When y = x, y gets a copy of 5. Changing x later doesn't affect y."},
{"id":3,"topic":"Variables","difficulty":"basic","question":"Which keyword is used to declare a global variable inside a function?","choices":["global","nonlocal","static","extern"],"answerIndex":0,"explanation":"The 'global' keyword is used to modify a global variable inside a function."},
{"id":4,"topic":"Variables","difficulty":"basic","question":"What happens if you assign a value to an undeclared variable in Python?","choices":["An error occurs","It creates the variable automatically","The interpreter ignores it","The variable becomes global"],"answerIndex":1,"explanation":"Python automatically creates the variable when a value is assigned to an undeclared name in the current scope."},
{"id":5,"topic":"Data Types","difficulty":"basic","question":"What is the output type of the expression 3 / 2 in Python 3?","choices":["int","float","decimal","complex"],"answerIndex":1,"explanation":"In Python 3, division (/) always returns a float even if both operands are integers."},
{"id":6,"topic":"Data Types","difficulty":"basic","question":"What is the data type of variable x after executing x = '10'?","choices":["int","float","str","bool"],"answerIndex":2,"explanation":"Values enclosed in quotes are strings in Python, even if they look like numbers."},
{"id":7,"topic":"Data Types","difficulty":"basic","question":"Which of these is an immutable data type?","choices":["list","set","dict","tuple"],"answerIndex":3,"explanation":"Tuples are immutable, meaning their contents cannot be changed after creation."},
{"id":8,"topic":"Data Types","difficulty":"basic","question":"What is the result of type([])?","choices":["list","'list'","<class 'list'>","None"],"answerIndex":2,"explanation":"The type() function returns a type object, displayed as <class 'list'>."},
{"id":9,"topic":"Data Types","difficulty":"basic","question":"Which function converts a string into an integer?","choices":["str()","float()","int()","eval()"],"answerIndex":2,"explanation":"The int() function converts numeric strings to integers when possible."},
{"id":10,"topic":"Strings","difficulty":"basic","question":"What will be the output of print('Python'[1])?","choices":["P","y","t","h"],"answerIndex":1,"explanation":"String indices in Python start at 0, so index 1 corresponds to 'y'."},
{"id":11,"topic":"Strings","difficulty":"basic","question":"Which of the following methods converts all characters of a string to lowercase?","choices":["lower()","tolower()","downcase()","minimize()"],"answerIndex":0,"explanation":"The correct built-in string method is lower(), which returns a lowercase copy."},
{"id":12,"topic":"Strings","difficulty":"basic","question":"What does len('Hello World') return?","choices":["10","11","12","Error"],"answerIndex":1,"explanation":"There are 11 characters including the space in 'Hello World'."},
{"id":13,"topic":"Strings","difficulty":"basic","question":"Which operator is used for string concatenation in Python?","choices":["+","&",".","*"],"answerIndex":0,"explanation":"The + operator concatenates (joins) strings in Python."},
{"id":14,"topic":"Strings","difficulty":"basic","question":"What will print('A' * 3) output?","choices":["AAA","A3","Error","['A','A','A']"],"answerIndex":0,"explanation":"Multiplying a string by an integer repeats the string that many times, resulting in 'AAA'."},
{"id":15,"topic":"Operators","difficulty":"basic","question":"What is the result of 10 % 3?","choices":["3","1","0.3","10/3"],"answerIndex":1,"explanation":"The modulo operator (%) returns the remainder of division, which is 1 here."},
{"id":16,"topic":"Operators","difficulty":"basic","question":"Which operator is used to check equality in Python?","choices":["=","==","===","!="],"answerIndex":1,"explanation":"The == operator checks whether two values are equal in Python."},
{"id":17,"topic":"Operators","difficulty":"basic","question":"What is the result of 2 ** 3?","choices":["6","8","9","Error"],"answerIndex":1,"explanation":"The ** operator performs exponentiation. 2 ** 3 equals 8."},
{"id":18,"topic":"Operators","difficulty":"basic","question":"Which of the following operators has the highest precedence?","choices":["and","or","not","=="],"answerIndex":2,"explanation":"Among logical operators, 'not' has the highest precedence in Python."},
{"id":19,"topic":"Operators","difficulty":"basic","question":"What does the // operator do in Python?","choices":["Divides and gives remainder","Divides and gives quotient","Raises to power","Performs float division"],"answerIndex":1,"explanation":"The // operator performs floor division and returns the integer quotient."},
{"id":20,"topic":"Conditionals","difficulty":"basic","question":"Which keyword is used for conditional branching in Python?","choices":["if","switch","case","choose"],"answerIndex":0,"explanation":"Python uses the 'if' keyword for conditional statements."},
{"id":21,"topic":"Conditionals","difficulty":"basic","question":"What will be printed?\n\nx = 5\nif x > 3:\n  print('Yes')\nelse:\n  print('No')","choices":["Yes","No","Error","None"],"answerIndex":0,"explanation":"Since 5 > 3, the condition is true, and 'Yes' is printed."},
{"id":22,"topic":"Conditionals","difficulty":"basic","question":"Which of the following keywords is used for multiple conditions?","choices":["elif","elseif","else if","switch"],"answerIndex":0,"explanation":"Python uses 'elif' for additional conditional checks after an 'if' statement."},
{"id":23,"topic":"Conditionals","difficulty":"basic","question":"What will be the output?\n\nx = 10\nif x < 5:\n print('Low')\nelif x == 10:\n print('Equal')\nelse:\n print('High')","choices":["Low","Equal","High","Error"],"answerIndex":1,"explanation":"The elif condition matches since x == 10, so 'Equal' is printed."},
{"id":24,"topic":"Conditionals","difficulty":"basic","question":"What does the 'pass' statement do in Python?","choices":["Skips execution","Stops execution","Throws error","Performs addition"],"answerIndex":0,"explanation":"'pass' is a no-operation statement used as a placeholder when no code is needed."},
{"id":25,"topic":"Loops","difficulty":"basic","question":"Which keyword is used to start a loop in Python?","choices":["repeat","for","foreach","loop"],"answerIndex":1,"explanation":"The 'for' keyword begins a for loop in Python."},
{"id":26,"topic":"Loops","difficulty":"basic","question":"What will be printed?\n\nfor i in range(3):\n print(i)","choices":["1 2 3","0 1 2","1 2","Error"],"answerIndex":1,"explanation":"range(3) generates 0,1,2 — so these numbers are printed."},
{"id":27,"topic":"Loops","difficulty":"basic","question":"Which loop is used when the number of iterations is unknown?","choices":["for","while","do-while","repeat"],"answerIndex":1,"explanation":"A while loop runs as long as a condition is true, making it ideal for unknown iteration counts."},
{"id":28,"topic":"Loops","difficulty":"basic","question":"What will break do in a loop?","choices":["End current iteration","Stop the loop","Restart the loop","Skip next iteration"],"answerIndex":1,"explanation":"The break statement immediately exits the current loop."},
{"id":29,"topic":"Loops","difficulty":"basic","question":"What does continue do inside a loop?","choices":["Stops the loop","Skips to next iteration","Repeats current iteration","Throws error"],"answerIndex":1,"explanation":"continue skips the rest of the current iteration and proceeds to the next."},
{"id":30,"topic":"Loops","difficulty":"basic","question":"What will this code print?\n\ncount = 0\nwhile count < 3:\n print(count)\n count += 1","choices":["1 2 3","0 1 2","Error","Infinite loop"],"answerIndex":1,"explanation":"The loop runs while count < 3, printing 0, 1, and 2 before stopping."},
{"id":31,"topic":"Functions","difficulty":"basic","question":"How do you define a function in Python?","choices":["function myFunc():","def myFunc():","func myFunc():","define myFunc():"],"answerIndex":1,"explanation":"Functions are defined using the 'def' keyword in Python."},
{"id":32,"topic":"Functions","difficulty":"basic","question":"What is the return value of a function that doesn’t explicitly return anything?","choices":["None","0","False","Undefined"],"answerIndex":0,"explanation":"If no return statement is specified, the function returns None by default."},
{"id":33,"topic":"Functions","difficulty":"basic","question":"Which keyword is used to return a value from a function?","choices":["output","return","yield","export"],"answerIndex":1,"explanation":"The 'return' keyword ends a function and sends a value back to the caller."},
{"id":34,"topic":"Functions","difficulty":"basic","question":"What is a parameter in a function definition?","choices":["A constant","A value passed to the function","A variable used inside the function","A variable listed inside parentheses in the function definition"],"answerIndex":3,"explanation":"Parameters are variables listed in the function definition to receive arguments."},
{"id":35,"topic":"Functions","difficulty":"basic","question":"Which of these calls a function named greet with argument 'John'?","choices":["greet['John']","greet{'John'}","greet('John')","call greet 'John'"],"answerIndex":2,"explanation":"Functions are called using parentheses, so greet('John') is correct."},
{"id":36,"topic":"Functions","difficulty":"basic","question":"What is the output of len([1,2,3,4])?","choices":["3","4","5","Error"],"answerIndex":1,"explanation":"The len() function returns the number of items in a list, which is 4."},
{"id":37,"topic":"Functions","difficulty":"basic","question":"Which keyword is used to define an anonymous function?","choices":["def","lambda","anon","func"],"answerIndex":1,"explanation":"Anonymous functions in Python are created with the 'lambda' keyword."},
{"id":38,"topic":"Functions","difficulty":"basic","question":"What will print(sum([1,2,3])) output?","choices":["6","123","[6]","Error"],"answerIndex":0,"explanation":"The built-in sum() adds all numbers in an iterable, returning 6."},
{"id":39,"topic":"Functions","difficulty":"basic","question":"What is the output of abs(-5)?","choices":["-5","5","Error","None"],"answerIndex":1,"explanation":"abs() returns the absolute (non-negative) value of its argument."},
{"id":40,"topic":"Functions","difficulty":"basic","question":"What is a docstring in Python?","choices":["A special type of comment","A variable","A string literal at the start of a function or module","A debugging statement"],"answerIndex":2,"explanation":"A docstring is a string literal placed at the beginning of a function, class, or module to describe its purpose."},
{"id":41,"topic":"Lists","difficulty":"basic","question":"How do you create an empty list?","choices":["list = {}","list = []","list = ()","list = ''"],"answerIndex":1,"explanation":"Empty lists are created using square brackets: []"},
{"id":42,"topic":"Lists","difficulty":"basic","question":"What will be the output of len(['a','b','c'])?","choices":["2","3","4","Error"],"answerIndex":1,"explanation":"The list has three elements, so len() returns 3."},
{"id":43,"topic":"Lists","difficulty":"basic","question":"Which method adds an element to the end of a list?","choices":["add()","append()","insert()","extend()"],"answerIndex":1,"explanation":"The append() method adds a single item to the end of a list."},
{"id":44,"topic":"Lists","difficulty":"basic","question":"What will be printed?\n\nnums = [1,2,3]\nnums[1] = 5\nprint(nums)","choices":["[1,2,3]","[1,5,3]","[5,1,3]","Error"],"answerIndex":1,"explanation":"Lists are mutable, so element at index 1 is updated to 5."},
{"id":45,"topic":"Lists","difficulty":"basic","question":"What does list.pop() do?","choices":["Adds element","Removes and returns last element","Deletes entire list","Removes first element"],"answerIndex":1,"explanation":"pop() removes and returns the last element from a list by default."},
{"id":46,"topic":"Lists","difficulty":"basic","question":"How can you join two lists a and b?","choices":["a + b","a & b","join(a,b)","merge(a,b)"],"answerIndex":0,"explanation":"The + operator concatenates two lists."},
{"id":47,"topic":"Tuples","difficulty":"basic","question":"Which symbol is used to create a tuple?","choices":["[]","{}","()","<>"],"answerIndex":2,"explanation":"Parentheses () are used to create tuples."},
{"id":48,"topic":"Tuples","difficulty":"basic","question":"What is the output of (1,2,3)[1]?","choices":["1","2","3","Error"],"answerIndex":1,"explanation":"Index 1 corresponds to the second element in a tuple, which is 2."},
{"id":49,"topic":"Tuples","difficulty":"basic","question":"Are tuples mutable in Python?","choices":["Yes","No","Only integers","Depends on elements"],"answerIndex":1,"explanation":"Tuples are immutable — their elements cannot be modified after creation."},
{"id":50,"topic":"Tuples","difficulty":"basic","question":"What will len((1,)) return?","choices":["1","0","2","Error"],"answerIndex":0,"explanation":"A single-element tuple must include a trailing comma; len((1,)) = 1."},




{"id":51,"topic":"Lists","difficulty":"basic","question":"What will be the output of [1,2,3]*2?","choices":["[1,2,3,1,2,3]","[2,4,6]","[1,2,3]*2","Error"],"answerIndex":0,"explanation":"Multiplying a list by an integer repeats its elements that many times."},
{"id":52,"topic":"Lists","difficulty":"basic","question":"How do you access the last element of a list named items?","choices":["items[last]","items[-1]","items[len(items)]","items[0]"],"answerIndex":1,"explanation":"Negative indexing allows access from the end; items[-1] returns the last element."},
{"id":53,"topic":"Lists","difficulty":"basic","question":"What will be printed?\n\nnums = [1,2,3]\nnums.insert(1,10)\nprint(nums)","choices":["[1,10,2,3]","[10,1,2,3]","[1,2,10,3]","Error"],"answerIndex":0,"explanation":"insert(1,10) inserts 10 at index 1, shifting the remaining elements right."},
{"id":54,"topic":"Lists","difficulty":"basic","question":"Which method removes all elements from a list?","choices":["delete()","clear()","removeAll()","empty()"],"answerIndex":1,"explanation":"clear() empties the list but keeps the list object itself."},
{"id":55,"topic":"Lists","difficulty":"basic","question":"What will be printed?\n\nx = [1,2,3]\ny = x\nx.append(4)\nprint(y)","choices":["[1,2,3]","[1,2,3,4]","[4]","Error"],"answerIndex":1,"explanation":"Both x and y refer to the same list object; appending to x also changes y."},
{"id":56,"topic":"Dictionaries","difficulty":"basic","question":"How do you create an empty dictionary?","choices":["{}","[]","()","set()"],"answerIndex":0,"explanation":"Empty curly braces {} create an empty dictionary."},
{"id":57,"topic":"Dictionaries","difficulty":"basic","question":"What will be printed?\n\nd = {'a':1,'b':2}\nprint(d['a'])","choices":["'a'","1","2","Error"],"answerIndex":1,"explanation":"Accessing d['a'] returns the value associated with key 'a', which is 1."},
{"id":58,"topic":"Dictionaries","difficulty":"basic","question":"Which method returns all keys of a dictionary?","choices":["values()","items()","keys()","getkeys()"],"answerIndex":2,"explanation":"The keys() method returns a view object of all keys in a dictionary."},
{"id":59,"topic":"Dictionaries","difficulty":"basic","question":"What is the output of len({'a':10,'b':20})?","choices":["10","20","2","Error"],"answerIndex":2,"explanation":"len() returns the number of key-value pairs, which is 2 here."},
{"id":60,"topic":"Dictionaries","difficulty":"basic","question":"How do you add a new key-value pair to a dictionary d?","choices":["d.add('c',3)","d.append('c':3)","d['c']=3","add(d,'c',3)"],"answerIndex":2,"explanation":"To add a new key-value pair, assign it directly using square brackets."},
{"id":61,"topic":"Dictionaries","difficulty":"basic","question":"What happens if you access a non-existing key without using get()?","choices":["Returns None","Returns False","Raises KeyError","Creates the key"],"answerIndex":2,"explanation":"Accessing a missing key directly raises a KeyError exception."},
{"id":62,"topic":"Sets","difficulty":"basic","question":"Which of these creates a set correctly?","choices":["{1,2,3}","[1,2,3]","(1,2,3)","set[1,2,3]"],"answerIndex":0,"explanation":"Curly braces with comma-separated values define a set."},
{"id":63,"topic":"Sets","difficulty":"basic","question":"What will be printed?\n\ns = {1,2,2,3}\nprint(s)","choices":["{1,2,2,3}","{1,2,3}","[1,2,3]","Error"],"answerIndex":1,"explanation":"Sets store unique elements, so duplicates are automatically removed."},
{"id":64,"topic":"Sets","difficulty":"basic","question":"Which method adds an element to a set?","choices":["push()","add()","append()","insert()"],"answerIndex":1,"explanation":"The add() method inserts a new element into a set."},
{"id":65,"topic":"Sets","difficulty":"basic","question":"What will {1,2} | {2,3} output?","choices":["{1,2,3}","{2}","{1,2}","Error"],"answerIndex":0,"explanation":"The | operator performs union of sets, combining unique elements from both."},
{"id":66,"topic":"Sets","difficulty":"basic","question":"What is the result of {1,2,3} & {2,3,4}?","choices":["{1,4}","{2,3}","{1,2,3,4}","{}"],"answerIndex":1,"explanation":"The & operator finds intersection elements present in both sets."},
{"id":67,"topic":"Input/Output","difficulty":"basic","question":"Which function is used to take input from the user?","choices":["get()","input()","read()","scan()"],"answerIndex":1,"explanation":"The input() function reads a line of input as a string from the user."},
{"id":68,"topic":"Input/Output","difficulty":"basic","question":"What is the return type of input() function?","choices":["str","int","depends on input","float"],"answerIndex":0,"explanation":"input() always returns a string, even if numbers are entered."},
{"id":69,"topic":"Input/Output","difficulty":"basic","question":"Which function is used to print output to the console?","choices":["display()","echo()","print()","write()"],"answerIndex":2,"explanation":"print() is the standard output function in Python."},
{"id":70,"topic":"Input/Output","difficulty":"basic","question":"What will be printed?\n\nprint('Hello','World')","choices":["HelloWorld","Hello World","Hello,World","Error"],"answerIndex":1,"explanation":"By default, print() separates arguments by a space."},
{"id":71,"topic":"Input/Output","difficulty":"basic","question":"Which argument of print() changes the separator between items?","choices":["end","sep","space","split"],"answerIndex":1,"explanation":"The sep argument defines the separator between printed arguments."},
{"id":72,"topic":"Input/Output","difficulty":"basic","question":"How can you prevent print() from moving to a new line?","choices":["use end=' '","use sep=''","use newline=False","use stop()"],"answerIndex":0,"explanation":"Setting end=' ' or another string prevents print() from adding a newline."},
{"id":73,"topic":"Files","difficulty":"basic","question":"Which function opens a file in Python?","choices":["file()","open()","read()","write()"],"answerIndex":1,"explanation":"open() is the built-in function to open files for reading or writing."},
{"id":74,"topic":"Files","difficulty":"basic","question":"What mode should be used to read a file?","choices":["'w'","'a'","'r'","'x'"],"answerIndex":2,"explanation":"The mode 'r' opens the file for reading."},
{"id":75,"topic":"Files","difficulty":"basic","question":"What does read() do on a file object?","choices":["Reads one line","Reads the whole file","Reads binary data","Writes data"],"answerIndex":1,"explanation":"The read() method reads the entire contents of the file."},
{"id":76,"topic":"Files","difficulty":"basic","question":"Which method writes data to a file?","choices":["print()","add()","write()","store()"],"answerIndex":2,"explanation":"write() writes the given string to an open file in write mode."},
{"id":77,"topic":"Files","difficulty":"basic","question":"What does the close() method do?","choices":["Deletes the file","Saves and closes the file","Clears the file","Renames file"],"answerIndex":1,"explanation":"close() flushes buffers and releases file resources properly."},
{"id":78,"topic":"Exceptions","difficulty":"basic","question":"Which keyword begins exception handling?","choices":["try","except","raise","catch"],"answerIndex":0,"explanation":"The try block encloses code that might raise exceptions."},
{"id":79,"topic":"Exceptions","difficulty":"basic","question":"What keyword handles exceptions after try?","choices":["finally","handle","except","error"],"answerIndex":2,"explanation":"The except block handles specific or general exceptions raised in try."},
{"id":80,"topic":"Exceptions","difficulty":"basic","question":"What does the finally block do?","choices":["Always executes","Executes only if no error","Never executes","Executes only on errors"],"answerIndex":0,"explanation":"finally always executes, regardless of whether an exception occurred."},
{"id":81,"topic":"Exceptions","difficulty":"basic","question":"Which function raises an exception manually?","choices":["throw()","raise()","error()","assert()"],"answerIndex":1,"explanation":"The raise keyword manually triggers an exception."},
{"id":82,"topic":"Exceptions","difficulty":"basic","question":"What exception is raised when dividing by zero?","choices":["TypeError","ValueError","ZeroDivisionError","IndexError"],"answerIndex":2,"explanation":"Dividing by zero raises ZeroDivisionError in Python."},
{"id":83,"topic":"Booleans","difficulty":"basic","question":"What is the result of bool('False')?","choices":["False","True","Error","None"],"answerIndex":1,"explanation":"Non-empty strings are truthy in Python, so bool('False') evaluates to True."},
{"id":84,"topic":"Booleans","difficulty":"basic","question":"What is the output of bool(0)?","choices":["True","False","Error","None"],"answerIndex":1,"explanation":"Zero is considered False in Python's boolean context."},
{"id":85,"topic":"Booleans","difficulty":"basic","question":"What is the output of not True?","choices":["True","False","None","Error"],"answerIndex":1,"explanation":"The not operator inverts the boolean value; not True is False."},
{"id":86,"topic":"Booleans","difficulty":"basic","question":"Which values evaluate to False in Python?","choices":["0","[]","''","All of these"],"answerIndex":3,"explanation":"Zero, empty lists, empty strings, and None all evaluate to False."},
{"id":87,"topic":"Booleans","difficulty":"basic","question":"What is the output of True + True?","choices":["2","1","True","Error"],"answerIndex":0,"explanation":"Booleans are subclasses of int; True equals 1, so 1 + 1 = 2."},
{"id":88,"topic":"Type Conversion","difficulty":"basic","question":"What does int('3') return?","choices":["3","'3'","Error","3.0"],"answerIndex":0,"explanation":"int('3') converts the string '3' to the integer 3."},
{"id":89,"topic":"Type Conversion","difficulty":"basic","question":"What does str(10.5) return?","choices":["'10.5'","10.5","Error","None"],"answerIndex":0,"explanation":"The str() function converts any object into its string representation."},
{"id":90,"topic":"Type Conversion","difficulty":"basic","question":"What will be the output of float('2.5')?","choices":["'2.5'","2.5","Error","int"],"answerIndex":1,"explanation":"float('2.5') converts the string to a floating-point number."},
{"id":91,"topic":"Comments","difficulty":"basic","question":"How do you write a single-line comment in Python?","choices":["// comment","/* comment */","# comment","-- comment"],"answerIndex":2,"explanation":"Single-line comments in Python begin with #."},
{"id":92,"topic":"Comments","difficulty":"basic","question":"How do you write a multi-line comment in Python?","choices":["/* */","<!-- -->","Triple quotes","//"],"answerIndex":2,"explanation":"Triple-quoted strings are often used as multi-line comments or docstrings."},
{"id":93,"topic":"Identifiers","difficulty":"basic","question":"Which of these is a valid identifier?","choices":["my-variable","123abc","_name","class"],"answerIndex":2,"explanation":"Identifiers can start with an underscore and must not be a reserved keyword."},
{"id":94,"topic":"Identifiers","difficulty":"basic","question":"Can Python identifiers contain Unicode characters?","choices":["Yes","No","Only ASCII","Only digits"],"answerIndex":0,"explanation":"Python 3 identifiers can include Unicode letters and underscores."},
{"id":95,"topic":"Syntax","difficulty":"basic","question":"What is the correct way to write a block of code in Python?","choices":["Using curly braces","Using indentation","Using semicolons","Using begin/end"],"answerIndex":1,"explanation":"Python uses indentation to define code blocks instead of braces."},
{"id":96,"topic":"Syntax","difficulty":"basic","question":"What will happen if indentation is incorrect?","choices":["Nothing","SyntaxError","ValueError","IndentError"],"answerIndex":3,"explanation":"Incorrect indentation raises an IndentError or sometimes SyntaxError."},
{"id":97,"topic":"Syntax","difficulty":"basic","question":"What symbol marks the end of a statement?","choices":[";","\\n","Both A and B","None"],"answerIndex":2,"explanation":"Python statements typically end with a newline but semicolons can separate statements too."},
{"id":98,"topic":"General","difficulty":"basic","question":"Which of these is the correct file extension for Python files?","choices":[".pt",".py",".python",".pyt"],"answerIndex":1,"explanation":"Python source files have the .py extension."},
{"id":99,"topic":"General","difficulty":"basic","question":"Which function shows all keywords in Python?","choices":["help()","dir()","keyword.kwlist","list.keywords()"],"answerIndex":2,"explanation":"The keyword module provides kwlist that contains all Python keywords."},
{"id":100,"topic":"General","difficulty":"basic","question":"Who created Python?","choices":["Guido van Rossum","Dennis Ritchie","James Gosling","Bjarne Stroustrup"],"answerIndex":0,"explanation":"Python was created by Guido van Rossum and released in 1991."},




{"id":101,"topic":"Functions","difficulty":"intermediate","question":"What will be printed?\n\ndef foo(x,y=2):\n    return x*y\nprint(foo(3))","choices":["6","5","Error","None"],"answerIndex":0,"explanation":"The default value of y is 2, so foo(3) returns 3*2 = 6."},
{"id":102,"topic":"Functions","difficulty":"intermediate","question":"Which statement about default parameters is true?","choices":["They must come before non-default ones","They must come after non-default ones","They can be anywhere","Python ignores their order"],"answerIndex":1,"explanation":"Default parameters must appear after all non-default parameters."},
{"id":103,"topic":"Functions","difficulty":"intermediate","question":"What will be printed?\n\ndef add(a,b,*c):\n    return a+b+sum(c)\nprint(add(1,2,3,4))","choices":["3","7","10","Error"],"answerIndex":2,"explanation":"*c collects extra arguments into a tuple. sum(3,4)=7; 1+2+7=10."},
{"id":104,"topic":"Functions","difficulty":"intermediate","question":"Which keyword allows returning multiple values?","choices":["return","yield","pack","tuple"],"answerIndex":0,"explanation":"A single return statement can return multiple values as a tuple."},
{"id":105,"topic":"Functions","difficulty":"intermediate","question":"What is a lambda function?","choices":["A recursive function","An anonymous inline function","A built-in module","A decorator"],"answerIndex":1,"explanation":"Lambda creates anonymous inline functions using the syntax lambda args: expr."},
{"id":106,"topic":"Functions","difficulty":"intermediate","question":"What will print?\n\nf = lambda x: x**2\nprint(f(4))","choices":["8","16","4","Error"],"answerIndex":1,"explanation":"The lambda squares the input, so f(4)=16."},
{"id":107,"topic":"Functions","difficulty":"intermediate","question":"What will happen if a function has no return statement?","choices":["It returns None","It returns 0","It raises an error","It repeats"],"answerIndex":0,"explanation":"Functions without a return statement automatically return None."},
{"id":108,"topic":"Functions","difficulty":"intermediate","question":"Which keyword is used to define a function?","choices":["fun","define","function","def"],"answerIndex":3,"explanation":"Functions in Python are defined using the def keyword."},
{"id":109,"topic":"Functions","difficulty":"intermediate","question":"What is output of len((lambda x: x)([1,2,3]))?","choices":["3","Error","1","None"],"answerIndex":0,"explanation":"The lambda returns [1,2,3]; len([1,2,3])=3."},
{"id":110,"topic":"Functions","difficulty":"intermediate","question":"What does *args allow a function to do?","choices":["Pass a dictionary","Accept any number of positional arguments","Return multiple values","Accept keyword arguments"],"answerIndex":1,"explanation":"*args lets you pass variable numbers of positional arguments."},
{"id":111,"topic":"OOP","difficulty":"intermediate","question":"Which keyword defines a class in Python?","choices":["object","class","def","type"],"answerIndex":1,"explanation":"Classes are created using the class keyword."},
{"id":112,"topic":"OOP","difficulty":"intermediate","question":"What is self in a class method?","choices":["A keyword","The class name","The instance of the class","A decorator"],"answerIndex":2,"explanation":"self represents the current instance of the class whose method is being called."},
{"id":113,"topic":"OOP","difficulty":"intermediate","question":"What will print?\n\nclass A:\n    def __init__(self,x):\n        self.x=x\nobj=A(5)\nprint(obj.x)","choices":["None","5","Error","x"],"answerIndex":1,"explanation":"__init__ initializes the object; obj.x equals 5."},
{"id":114,"topic":"OOP","difficulty":"intermediate","question":"Which method is called automatically when an object is created?","choices":["__new__","__init__","__del__","__call__"],"answerIndex":1,"explanation":"The constructor method __init__ runs automatically after object creation."},
{"id":115,"topic":"OOP","difficulty":"intermediate","question":"What is inheritance?","choices":["A class having multiple constructors","A class deriving properties from another","A function calling itself","Multiple methods sharing the same name"],"answerIndex":1,"explanation":"Inheritance allows a class to acquire properties and methods from another class."},
{"id":116,"topic":"OOP","difficulty":"intermediate","question":"What is method overriding?","choices":["Using two methods with same name in one class","Child class redefining parent’s method","Using decorators on methods","Multiple inheritance"],"answerIndex":1,"explanation":"When a child class defines a method with the same name as in the parent, it overrides it."},
{"id":117,"topic":"OOP","difficulty":"intermediate","question":"What will print?\n\nclass Base:\n    def greet(self):\n        return 'Hello'\nclass Child(Base):\n    pass\nprint(Child().greet())","choices":["Error","Hello","None","Child"],"answerIndex":1,"explanation":"Child inherits greet() from Base, so it prints 'Hello'."},
{"id":118,"topic":"OOP","difficulty":"intermediate","question":"Which function returns the class name of an object?","choices":["__name__","type()","classname()","object()"],"answerIndex":1,"explanation":"type(obj) returns the object’s type, which includes class info."},
{"id":119,"topic":"OOP","difficulty":"intermediate","question":"What does super() do?","choices":["Deletes object","Calls a parent class method","Creates subclass","Initializes variables"],"answerIndex":1,"explanation":"super() allows calling methods from a parent class within subclass."},
{"id":120,"topic":"OOP","difficulty":"intermediate","question":"Which special method returns a string representation of an object?","choices":["__repr__","__str__","__init__","__name__"],"answerIndex":1,"explanation":"__str__ defines how an object is represented as a string."},
{"id":121,"topic":"OOP","difficulty":"intermediate","question":"What is encapsulation?","choices":["Hiding internal details","Multiple inheritance","Operator overloading","Defining functions"],"answerIndex":0,"explanation":"Encapsulation hides internal state and restricts direct access to data."},
{"id":122,"topic":"Modules","difficulty":"intermediate","question":"How do you import the math module?","choices":["use math","import math","include math","require math"],"answerIndex":1,"explanation":"import math loads the math module into the namespace."},
{"id":123,"topic":"Modules","difficulty":"intermediate","question":"How to import only sqrt from math?","choices":["from math import sqrt","import sqrt from math","require sqrt from math","math.sqrt()"],"answerIndex":0,"explanation":"from math import sqrt imports only that function."},
{"id":124,"topic":"Modules","difficulty":"intermediate","question":"How do you alias a module?","choices":["import math.alias","import math as m","alias math","module math m"],"answerIndex":1,"explanation":"import math as m allows referring to math as m."},
{"id":125,"topic":"Modules","difficulty":"intermediate","question":"What does dir(math) return?","choices":["Math constants only","List of attributes and methods","Only functions","Error"],"answerIndex":1,"explanation":"dir() lists all names defined in a module."},
{"id":126,"topic":"Modules","difficulty":"intermediate","question":"Which statement is true about built-in modules?","choices":["They need manual installation","They are part of Python standard library","They are written in Java","They can't be imported"],"answerIndex":1,"explanation":"Built-in modules are available by default as part of the Python standard library."},
{"id":127,"topic":"File Handling","difficulty":"intermediate","question":"What does 'a' mode do in open()?","choices":["Appends data","Reads data","Writes new file only","Deletes file"],"answerIndex":0,"explanation":"Mode 'a' opens a file for appending at the end without truncating it."},
{"id":128,"topic":"File Handling","difficulty":"intermediate","question":"How do you read all lines at once?","choices":["read()","readline()","readlines()","readall()"],"answerIndex":2,"explanation":"readlines() returns all lines of a file as a list of strings."},
{"id":129,"topic":"File Handling","difficulty":"intermediate","question":"Which method moves the file cursor?","choices":["seek()","cursor()","goto()","move()"],"answerIndex":0,"explanation":"seek(offset) moves the file pointer to a specific position."},
{"id":130,"topic":"File Handling","difficulty":"intermediate","question":"What does tell() return?","choices":["File name","File size","Current cursor position","Encoding"],"answerIndex":2,"explanation":"tell() returns the current position of the file pointer."},
{"id":131,"topic":"File Handling","difficulty":"intermediate","question":"How do you ensure a file closes automatically?","choices":["Use finally block","Use with statement","Call close() manually","Use auto=True"],"answerIndex":1,"explanation":"Using with ensures automatic file closure after the block ends."},
{"id":132,"topic":"Exceptions","difficulty":"intermediate","question":"What is raised by int('abc')?","choices":["TypeError","ValueError","NameError","SyntaxError"],"answerIndex":1,"explanation":"int('abc') fails conversion and raises a ValueError."},
{"id":133,"topic":"Exceptions","difficulty":"intermediate","question":"What does raise ValueError('msg') do?","choices":["Logs an error","Raises a ValueError","Returns a message","Stops program silently"],"answerIndex":1,"explanation":"raise ValueError('msg') explicitly raises that exception."},
{"id":134,"topic":"Exceptions","difficulty":"intermediate","question":"Which clause executes only if no exception occurs?","choices":["try","else","finally","raise"],"answerIndex":1,"explanation":"else in try-except runs only if no exception occurs."},
{"id":135,"topic":"Exceptions","difficulty":"intermediate","question":"What is the output?\n\ntry:\n print(1/0)\nexcept ZeroDivisionError:\n print('err')\nfinally:\n print('done')","choices":["err","done","err\\ndone","Error"],"answerIndex":2,"explanation":"except handles the error and finally always runs, printing both lines."},
{"id":136,"topic":"Exceptions","difficulty":"intermediate","question":"How can you define custom exceptions?","choices":["inherit Exception","use raise Custom","define error","custom = Exception()"],"answerIndex":0,"explanation":"Custom exceptions are defined by subclassing the built-in Exception class."},
{"id":137,"topic":"Iterators","difficulty":"intermediate","question":"What is an iterator in Python?","choices":["An object with __next__() method","A list","A generator","A function"],"answerIndex":0,"explanation":"Iterators implement __iter__() and __next__() methods."},
{"id":138,"topic":"Iterators","difficulty":"intermediate","question":"Which function returns an iterator object from a sequence?","choices":["list()","iter()","next()","enumerate()"],"answerIndex":1,"explanation":"iter(sequence) returns an iterator for that sequence."},
{"id":139,"topic":"Iterators","difficulty":"intermediate","question":"What does next() do on an iterator?","choices":["Stops iteration","Returns next element","Resets iterator","Creates list"],"answerIndex":1,"explanation":"next() retrieves the next element from an iterator."},
{"id":140,"topic":"Iterators","difficulty":"intermediate","question":"What exception signals end of iteration?","choices":["StopIteration","EndLoop","EOFError","IterationStop"],"answerIndex":0,"explanation":"When iterators finish, they raise StopIteration to indicate completion."},
{"id":141,"topic":"Generators","difficulty":"intermediate","question":"What keyword is used to define a generator?","choices":["return","yield","gen","next"],"answerIndex":1,"explanation":"yield is used instead of return to make a function a generator."},
{"id":142,"topic":"Generators","difficulty":"intermediate","question":"What will print?\n\ndef gen():\n for i in range(2):\n  yield i\nprint(list(gen()))","choices":["[0,1]","[1,2]","[0,1,2]","[]"],"answerIndex":0,"explanation":"yield produces 0 and 1, forming [0,1] when collected in a list."},
{"id":143,"topic":"Generators","difficulty":"intermediate","question":"What happens after a generator is exhausted?","choices":["It resets automatically","It raises StopIteration","It loops again","It returns 0"],"answerIndex":1,"explanation":"Once exhausted, subsequent next() calls raise StopIteration."},
{"id":144,"topic":"Generators","difficulty":"intermediate","question":"How to restart a generator?","choices":["next(gen)","reopen(gen)","Recreate it","reset(gen)"],"answerIndex":2,"explanation":"Generators cannot be reset; you must recreate the generator object."},
{"id":145,"topic":"Generators","difficulty":"intermediate","question":"Which statement is true about generators?","choices":["They consume less memory","They store all values","They are slower","They are lists"],"answerIndex":0,"explanation":"Generators yield values lazily, saving memory by not storing all values."},
{"id":146,"topic":"Decorators","difficulty":"intermediate","question":"What does a decorator do?","choices":["Modifies function behavior","Defines loops","Raises exceptions","Imports modules"],"answerIndex":0,"explanation":"Decorators wrap another function to modify or enhance its behavior."},
{"id":147,"topic":"Decorators","difficulty":"intermediate","question":"What symbol applies a decorator to a function?","choices":["#","@","$","&"],"answerIndex":1,"explanation":"@decorator syntax applies the decorator to a function definition."},
{"id":148,"topic":"Decorators","difficulty":"intermediate","question":"What will print?\n\ndef deco(fn):\n def inner():\n  return fn()+\"!\"\n return inner\n@deco\ndef say():\n return 'Hi'\nprint(say())","choices":["Hi","Hi!","Error","None"],"answerIndex":1,"explanation":"Decorator appends '!' to the original function’s return value."},
{"id":149,"topic":"Decorators","difficulty":"intermediate","question":"Which built-in decorator defines a static method?","choices":["@classmethod","@staticmethod","@property","@decorator"],"answerIndex":1,"explanation":"@staticmethod marks a method that doesn’t use self or cls."},
{"id":150,"topic":"Decorators","difficulty":"intermediate","question":"Which built-in decorator allows accessing method as attribute?","choices":["@attribute","@classmethod","@property","@static"],"answerIndex":2,"explanation":"@property lets methods be accessed like attributes."},



{"id":151,"topic":"Comprehensions","difficulty":"intermediate","question":"What will [x**2 for x in range(3)] return?","choices":["[1,2,3]","[0,1,4]","[0,1,2,3]","Error"],"answerIndex":1,"explanation":"It squares 0,1,2 producing [0,1,4]."},
{"id":152,"topic":"Comprehensions","difficulty":"intermediate","question":"Which comprehension creates a set?","choices":["[]","{}","set()","{x for x in ...}"],"answerIndex":3,"explanation":"Curly braces with comprehension syntax create a set comprehension."},
{"id":153,"topic":"Comprehensions","difficulty":"intermediate","question":"What does {x:x**2 for x in range(3)} produce?","choices":["List","Set","Dictionary","Tuple"],"answerIndex":2,"explanation":"It’s a dictionary comprehension mapping x to x**2."},
{"id":154,"topic":"Comprehensions","difficulty":"intermediate","question":"How to add condition in comprehension?","choices":["use if inside","after for","both","not possible"],"answerIndex":0,"explanation":"List comprehensions support conditions: [x for x in range(5) if x>2]."},
{"id":155,"topic":"Comprehensions","difficulty":"intermediate","question":"What will be the output of [x for x in 'abc']?","choices":["['a','b','c']","'abc'","['abc']","Error"],"answerIndex":0,"explanation":"Each character in the string becomes an element of the list."},
{"id":156,"topic":"Data Structures","difficulty":"intermediate","question":"Which data type is immutable?","choices":["List","Dictionary","Set","Tuple"],"answerIndex":3,"explanation":"Tuples cannot be modified after creation, unlike lists."},
{"id":157,"topic":"Data Structures","difficulty":"intermediate","question":"How do you convert list to tuple?","choices":["tuple(list)","list.tuple()","tolist()","convert()"],"answerIndex":0,"explanation":"tuple(list) returns a tuple with list elements."},
{"id":158,"topic":"Data Structures","difficulty":"intermediate","question":"Which method merges two dictionaries?","choices":["merge()","update()","combine()","append()"],"answerIndex":1,"explanation":"update() merges one dictionary into another."},
{"id":159,"topic":"Lists","difficulty":"basic","question":"What is the output of list(range(0,10,2))?","choices":["[0,2,4,6,8]","[2,4,6,8,10]","[0,1,2,3,4,5,6,7,8,9]","[1,3,5,7,9]"],"answerIndex":0,"explanation":"The range(0,10,2) generates numbers from 0 to 9 with a step of 2. The resulting list is [0,2,4,6,8]."},
{"id":160,"topic":"Lists","difficulty":"basic","question":"Which method removes the last item from a list?","choices":["pop()","remove()","del","discard()"],"answerIndex":0,"explanation":"The pop() method removes and returns the last element from the list if no index is provided."},
{"id":161,"topic":"Lists","difficulty":"basic","question":"What does mylist.extend([4,5]) do?","choices":["Adds elements 4 and 5 as a new list","Adds 4 and 5 individually","Clears mylist","Reverses mylist"],"answerIndex":1,"explanation":"extend() adds elements from another iterable to the existing list one by one, not as a nested list."},
{"id":162,"topic":"Lists","difficulty":"basic","question":"What is the result of len(['a','b',['c','d']])?","choices":["2","3","4","Error"],"answerIndex":1,"explanation":"The outer list contains three elements: 'a', 'b', and another list ['c','d'], so len returns 3."},
{"id":163,"topic":"Tuples","difficulty":"basic","question":"Can a tuple contain mutable objects?","choices":["Yes","No","Only strings","Only numbers"],"answerIndex":0,"explanation":"Tuples are immutable but can hold mutable objects like lists inside them."},
{"id":164,"topic":"Tuples","difficulty":"basic","question":"How do you create a single-element tuple?","choices":["(1)","(1,)","tuple(1)","[1]"],"answerIndex":1,"explanation":"A trailing comma distinguishes a one-element tuple, e.g., (1,). Without it, Python treats it as a normal expression."},
{"id":165,"topic":"Tuples","difficulty":"basic","question":"Which method counts occurrences in a tuple?","choices":["count()","index()","find()","search()"],"answerIndex":0,"explanation":"The count() method in tuples returns how many times a specified element appears."},
{"id":166,"topic":"Sets","difficulty":"basic","question":"What is the main feature of a Python set?","choices":["Ordered and unique","Unordered and unique","Ordered and duplicates allowed","Unordered and duplicates allowed"],"answerIndex":1,"explanation":"Sets are unordered collections that automatically remove duplicate elements."},
{"id":167,"topic":"Sets","difficulty":"basic","question":"Which symbol represents set union?","choices":["|","&","-","^"],"answerIndex":0,"explanation":"The | operator performs set union, combining unique elements from both sets."},
{"id":168,"topic":"Sets","difficulty":"basic","question":"How to create an empty set correctly?","choices":["{}","set()","emptyset()","None"],"answerIndex":1,"explanation":"{} creates an empty dictionary. To create an empty set, use set()."},
{"id":169,"topic":"Sets","difficulty":"basic","question":"What does A & B return for sets A and B?","choices":["Union","Difference","Intersection","Symmetric Difference"],"answerIndex":2,"explanation":"The & operator returns the intersection of sets, i.e., common elements."},
{"id":170,"topic":"Dictionaries","difficulty":"basic","question":"How do you access a value by key in a dictionary?","choices":["dict.key","dict[key]","dict.getkey","dict->key"],"answerIndex":1,"explanation":"Use square brackets or get() to access a dictionary value by its key, e.g., dict['name']."},
{"id":171,"topic":"Dictionaries","difficulty":"basic","question":"What does dict.get('age',0) do?","choices":["Raises KeyError if 'age' missing","Returns 0 if 'age' not found","Deletes 'age' key","Prints 0"],"answerIndex":1,"explanation":"get() returns the specified default value (0 here) if the key does not exist."},
{"id":172,"topic":"Dictionaries","difficulty":"basic","question":"Which method removes all items from a dictionary?","choices":["clear()","pop()","del","removeAll()"],"answerIndex":0,"explanation":"clear() removes all key-value pairs from a dictionary but keeps it defined."},
{"id":173,"topic":"Dictionaries","difficulty":"basic","question":"What does dict.keys() return?","choices":["A list","A view object","A tuple","A generator"],"answerIndex":1,"explanation":"dict.keys() returns a view object that reflects real-time changes to the dictionary."},
{"id":174,"topic":"Strings","difficulty":"basic","question":"What is the result of 'Python'.lower()?","choices":["PYTHON","python","Python","error"],"answerIndex":1,"explanation":"The lower() string method returns a lowercase copy of the string."},
{"id":175,"topic":"Strings","difficulty":"basic","question":"Which operator is used to repeat strings?","choices":["*","+","**","//"],"answerIndex":0,"explanation":"The * operator repeats strings, e.g., 'Hi'*3 → 'HiHiHi'."},
{"id":176,"topic":"Strings","difficulty":"basic","question":"How to remove whitespace from both ends of a string?","choices":["strip()","split()","replace()","trim()"],"answerIndex":0,"explanation":"strip() removes leading and trailing whitespace from a string."},
{"id":177,"topic":"Strings","difficulty":"basic","question":"Which method checks if a string starts with a given prefix?","choices":["startswith()","find()","match()","check()"],"answerIndex":0,"explanation":"startswith() returns True if the string begins with the specified substring."},
{"id":178,"topic":"Control Flow","difficulty":"basic","question":"Which keyword starts a loop in Python?","choices":["repeat","loop","for","foreach"],"answerIndex":2,"explanation":"Python uses 'for' to start a loop over an iterable object."},
{"id":179,"topic":"Control Flow","difficulty":"basic","question":"What is the output of range(3)?","choices":["[0,1,2]","[1,2,3]","[0,1,2,3]","[3]"],"answerIndex":0,"explanation":"range(3) produces numbers 0, 1, and 2 by default (starting from 0)."},
{"id":180,"topic":"Control Flow","difficulty":"basic","question":"Which statement ends the loop early?","choices":["break","continue","exit","stop"],"answerIndex":0,"explanation":"The break statement immediately terminates the nearest enclosing loop."},
{"id":181,"topic":"Control Flow","difficulty":"basic","question":"What does 'continue' do in a loop?","choices":["Stops the loop","Skips to the next iteration","Repeats previous step","Ends program"],"answerIndex":1,"explanation":"continue skips the rest of the code in the current loop iteration and moves to the next one."},
{"id":182,"topic":"Functions","difficulty":"basic","question":"How do you define a function in Python?","choices":["function myFunc()","def myFunc():","func myFunc():","create function myFunc()"],"answerIndex":1,"explanation":"Functions are defined using 'def', e.g., def myFunc(): pass."},
{"id":183,"topic":"Functions","difficulty":"basic","question":"What is the default return value of a function without return statement?","choices":["0","None","False","''"],"answerIndex":1,"explanation":"If a function has no return statement, it returns None by default."},
{"id":184,"topic":"Functions","difficulty":"basic","question":"What keyword is used to pass no operation in a block?","choices":["pass","continue","return","skip"],"answerIndex":0,"explanation":"pass acts as a placeholder statement that does nothing."},
{"id":185,"topic":"Functions","difficulty":"basic","question":"How to define a function with a default argument value?","choices":["def f(a=5):","def f(default a=5):","def f(=5):","def f(a==5):"],"answerIndex":0,"explanation":"Default argument syntax is def f(a=5): allowing a default when not provided."},
{"id":186,"topic":"Modules","difficulty":"basic","question":"Which keyword is used to import a module?","choices":["import","include","use","require"],"answerIndex":0,"explanation":"Modules are loaded using the 'import' keyword, e.g., import math."},
{"id":187,"topic":"Modules","difficulty":"basic","question":"How do you import only sqrt from math module?","choices":["import sqrt","from math import sqrt","import math.sqrt","load math.sqrt"],"answerIndex":1,"explanation":"from math import sqrt imports only that specific function into current namespace."},
{"id":188,"topic":"Modules","difficulty":"basic","question":"What function lists all attributes in a module?","choices":["dir()","vars()","list()","help()"],"answerIndex":0,"explanation":"dir(module) returns a list of names defined inside the module."},
{"id":189,"topic":"Modules","difficulty":"basic","question":"What is __name__ set to when a module runs directly?","choices":["'main'","'__main__'","'module'","'run'"],"answerIndex":1,"explanation":"When a script runs directly, Python sets __name__ = '__main__'."},
{"id":190,"topic":"Input/Output","difficulty":"basic","question":"Which function reads input from the user?","choices":["input()","scan()","get()","ask()"],"answerIndex":0,"explanation":"input() waits for user input and returns it as a string."},
{"id":191,"topic":"Input/Output","difficulty":"basic","question":"Which function prints output to console?","choices":["write()","print()","echo()","display()"],"answerIndex":1,"explanation":"print() displays textual output to standard output (usually the console)."},
{"id":192,"topic":"Input/Output","difficulty":"basic","question":"What does print('A','B',sep='-') output?","choices":["A B","A-B","A,B","AB"],"answerIndex":1,"explanation":"The sep parameter controls separator between arguments. Here it’s a dash, so output is A-B."},
{"id":193,"topic":"Input/Output","difficulty":"basic","question":"How do you open a file for reading?","choices":["open('file','r')","open('file','w')","open('file','a')","open('file','x')"],"answerIndex":0,"explanation":"The mode 'r' opens the file in read-only mode."},
{"id":194,"topic":"Input/Output","difficulty":"basic","question":"What does file.close() do?","choices":["Deletes file","Closes file handle","Saves file","Reads content"],"answerIndex":1,"explanation":"close() releases the system resources associated with the open file."},
{"id":195,"topic":"Booleans","difficulty":"basic","question":"Which values are considered False in Python?","choices":["None, 0, '', []","Only False","Only None","All except 0"],"answerIndex":0,"explanation":"Falsy values include None, 0, '', empty containers like [] and {}."},
{"id":196,"topic":"Booleans","difficulty":"basic","question":"What is the output of bool('False')?","choices":["False","True","None","Error"],"answerIndex":1,"explanation":"Non-empty strings are truthy, so bool('False') evaluates to True."},
{"id":197,"topic":"Booleans","difficulty":"basic","question":"Which operator represents logical AND?","choices":["&","and","&&","All of them"],"answerIndex":1,"explanation":"Python uses the keyword 'and' for logical conjunction between booleans."},
{"id":198,"topic":"Booleans","difficulty":"basic","question":"What does not True return?","choices":["True","False","None","Error"],"answerIndex":1,"explanation":"The not operator negates the boolean value, so not True → False."},
{"id":199,"topic":"Misc","difficulty":"basic","question":"Which function gives the data type of a variable?","choices":["type()","class()","dtype()","typeof()"],"answerIndex":0,"explanation":"type() returns the type object of the given variable or value."},
{"id":200,"topic":"Misc","difficulty":"basic","question":"Which symbol starts a comment line?","choices":["//","#","/*","--"],"answerIndex":1,"explanation":"Comments in Python start with the # symbol, ignoring everything after it on that line."},




{"id":201,"topic":"Functions","difficulty":"intermediate","question":"What will be the output of the function call print(sum([1,2,3],10))?","choices":["6","16","Error","[11,12,13]"],"answerIndex":1,"explanation":"The built-in sum() starts adding from the given start value. So 1+2+3+10=16."},
{"id":202,"topic":"Functions","difficulty":"intermediate","question":"What happens if a function calls itself without an exit condition?","choices":["Infinite loop","RecursionError","SyntaxError","Stops automatically"],"answerIndex":1,"explanation":"Python raises RecursionError when maximum recursion depth is exceeded."},
{"id":203,"topic":"Functions","difficulty":"intermediate","question":"What is a lambda function?","choices":["A recursive function","An anonymous function","A built-in function","A decorator"],"answerIndex":1,"explanation":"Lambda functions are small anonymous functions defined with the lambda keyword for short, inline use."},
{"id":204,"topic":"Functions","difficulty":"intermediate","question":"What will print(type(lambda x: x*2)) output?","choices":["<class 'function'>","<class 'lambda'>","<class 'object'>","<lambda>"],"answerIndex":0,"explanation":"Lambdas are syntactic sugar for creating regular function objects, so their type is function."},
{"id":205,"topic":"Functions","difficulty":"intermediate","question":"Which statement about *args is correct?","choices":["Collects keyword arguments","Collects arbitrary positional arguments","Collects local variables","Is a tuple of constants"],"answerIndex":1,"explanation":"*args captures extra positional arguments into a tuple."},
{"id":206,"topic":"Functions","difficulty":"intermediate","question":"What will happen if both *args and **kwargs are used in a function?","choices":["Syntax error","Valid syntax","Only *args works","Only **kwargs works"],"answerIndex":1,"explanation":"You can use both to capture extra positional and keyword arguments respectively."},
{"id":207,"topic":"OOP","difficulty":"intermediate","question":"What does the __init__ method do in a class?","choices":["Initializes the object’s attributes","Deletes the object","Acts as destructor","None"],"answerIndex":0,"explanation":"__init__ is the constructor called automatically after creating an instance to initialize attributes."},
{"id":208,"topic":"OOP","difficulty":"intermediate","question":"How do you define a class method?","choices":["@classmethod decorator","@staticmethod decorator","By defining __class__","By using global"],"answerIndex":0,"explanation":"Class methods are marked with @classmethod and take cls as first argument instead of self."},
{"id":209,"topic":"OOP","difficulty":"intermediate","question":"Which method is called when an object is deleted?","choices":["__end__","__delete__","__del__","__final__"],"answerIndex":2,"explanation":"__del__ acts as a destructor, called when an object is garbage collected."},
{"id":210,"topic":"OOP","difficulty":"intermediate","question":"How do you make a class inherit from another?","choices":["class Child inherits Parent:","class Child extends Parent:","class Child(Parent):","class Child.Parent:"],"answerIndex":2,"explanation":"Inheritance syntax uses parentheses: class Child(Parent): pass."},
{"id":211,"topic":"OOP","difficulty":"intermediate","question":"What does super() do in Python?","choices":["Calls a superclass method","Creates a new thread","Returns class name","Deletes base class"],"answerIndex":0,"explanation":"super() is used to call methods from a parent class, especially in inheritance."},
{"id":212,"topic":"OOP","difficulty":"intermediate","question":"What will print(isinstance(3,int)) return?","choices":["True","False","Error","None"],"answerIndex":0,"explanation":"isinstance checks whether an object is an instance of a class or subclass."},
{"id":213,"topic":"Comprehensions","difficulty":"intermediate","question":"What is list comprehension used for?","choices":["Filtering data only","Creating new lists from iterables","Optimizing memory","Replacing loops completely"],"answerIndex":1,"explanation":"List comprehensions provide a concise way to create lists from existing iterables."},
{"id":214,"topic":"Comprehensions","difficulty":"intermediate","question":"Which expression generates [0,2,4,6,8]?","choices":["[x*2 for x in range(5)]","[x for x in range(0,10,2)]","[x+2 for x in range(0,8)]","Both 1 and 2"],"answerIndex":3,"explanation":"Both list comprehensions produce the same even numbers sequence."},
{"id":215,"topic":"Comprehensions","difficulty":"intermediate","question":"How to build a set comprehension?","choices":["{x for x in range(5)}","[x for x in range(5)]","(x for x in range(5))","set(x for x in range(5))"],"answerIndex":0,"explanation":"Using curly braces creates a set comprehension: {x for x in range(5)}."},
{"id":216,"topic":"Comprehensions","difficulty":"intermediate","question":"What will {x:x**2 for x in range(3)} create?","choices":["A list","A set","A tuple","A dictionary"],"answerIndex":3,"explanation":"Curly braces with key:value pairs create a dictionary comprehension mapping x to x squared."},
{"id":217,"topic":"File Handling","difficulty":"intermediate","question":"Which mode opens a file for both reading and writing?","choices":["r","w+","a","x"],"answerIndex":1,"explanation":"The 'w+' mode opens a file for both reading and writing, truncating the file first."},
{"id":218,"topic":"File Handling","difficulty":"intermediate","question":"What is the result of calling file.readlines()?","choices":["A list of lines","A string","A generator","None"],"answerIndex":0,"explanation":"readlines() reads the file into a list where each element represents one line."},
{"id":219,"topic":"File Handling","difficulty":"intermediate","question":"What is the safest way to open a file?","choices":["open() and close()","with open() as f:","import file","file.open()"],"answerIndex":1,"explanation":"Using 'with open()' ensures the file closes automatically after operations complete."},
{"id":220,"topic":"File Handling","difficulty":"intermediate","question":"Which method writes a string to a file?","choices":["write()","add()","append()","put()"],"answerIndex":0,"explanation":"The write() method writes the specified string to an open file handle."},
{"id":221,"topic":"Exceptions","difficulty":"intermediate","question":"Which keyword begins an exception handling block?","choices":["try","catch","except","raise"],"answerIndex":0,"explanation":"try begins the block of code where exceptions are monitored."},
{"id":222,"topic":"Exceptions","difficulty":"intermediate","question":"How to raise a ValueError manually?","choices":["throw ValueError","raise ValueError","except ValueError","ValueError()"],"answerIndex":1,"explanation":"raise ValueError explicitly triggers the exception."},
{"id":223,"topic":"Exceptions","difficulty":"intermediate","question":"Which statement always runs, regardless of exceptions?","choices":["finally","else","break","pass"],"answerIndex":0,"explanation":"finally block runs whether or not an exception occurs, often used for cleanup."},
{"id":224,"topic":"Exceptions","difficulty":"intermediate","question":"What does except Exception as e: do?","choices":["Prints the error","Assigns the exception to e","Ignores errors","Stops execution"],"answerIndex":1,"explanation":"This syntax binds the caught exception instance to variable e for inspection."},
{"id":225,"topic":"Modules","difficulty":"intermediate","question":"What will import math as m do?","choices":["Imports with alias m","Causes syntax error","Copies math module","Imports partially"],"answerIndex":0,"explanation":"You can assign an alias name to a module using 'as', improving readability."},
{"id":226,"topic":"Modules","difficulty":"intermediate","question":"What is the purpose of sys.argv?","choices":["Stores environment variables","Stores command-line arguments","Stores Python path","Stores module names"],"answerIndex":1,"explanation":"sys.argv is a list containing the command-line arguments passed to a Python script."},
{"id":227,"topic":"Modules","difficulty":"intermediate","question":"What does os.getcwd() return?","choices":["Current working directory","System path","Operating system type","List of files"],"answerIndex":0,"explanation":"os.getcwd() returns the absolute path of the current working directory."},
{"id":228,"topic":"Modules","difficulty":"intermediate","question":"Which module handles JSON data?","choices":["csv","json","pickle","re"],"answerIndex":1,"explanation":"The json module provides methods to parse and write JSON-formatted data."},
{"id":229,"topic":"Modules","difficulty":"intermediate","question":"Which module provides regular expression support?","choices":["regex","re","pattern","match"],"answerIndex":1,"explanation":"The 're' module in Python provides functions for working with regular expressions."},
{"id":230,"topic":"Decorators","difficulty":"intermediate","question":"What does a decorator do?","choices":["Modifies function behavior","Creates loops","Defines variables","Handles exceptions"],"answerIndex":0,"explanation":"Decorators allow you to modify or enhance functions or methods without changing their code."},
{"id":231,"topic":"Decorators","difficulty":"intermediate","question":"Which symbol applies a decorator to a function?","choices":["@","$","#","&"],"answerIndex":0,"explanation":"The @ symbol placed above a function applies a decorator to it."},
{"id":232,"topic":"Decorators","difficulty":"intermediate","question":"What is returned by a decorator function?","choices":["An integer","A modified function","A string","None"],"answerIndex":1,"explanation":"A decorator wraps and returns a modified version of the original function."},
{"id":233,"topic":"Decorators","difficulty":"intermediate","question":"Can multiple decorators be applied to the same function?","choices":["No","Yes","Only one","Only built-in"],"answerIndex":1,"explanation":"Multiple decorators can be stacked; they apply in reverse order from top to bottom."},
{"id":234,"topic":"Iterators","difficulty":"intermediate","question":"Which function returns an iterator from an iterable?","choices":["iter()","next()","map()","enumerate()"],"answerIndex":0,"explanation":"iter() converts an iterable into an iterator object that supports next()."},
{"id":235,"topic":"Iterators","difficulty":"intermediate","question":"What happens when next() runs out of items?","choices":["Returns None","Raises StopIteration","Loops again","Freezes"],"answerIndex":1,"explanation":"next() raises StopIteration when no more items are available."},
{"id":236,"topic":"Iterators","difficulty":"intermediate","question":"What does enumerate() return?","choices":["Tuple pairs of index and value","Only indexes","Only values","Dictionary"],"answerIndex":0,"explanation":"enumerate() yields pairs of (index, value) from an iterable."},
{"id":237,"topic":"Generators","difficulty":"intermediate","question":"Which keyword creates a generator?","choices":["yield","generate","return","create"],"answerIndex":0,"explanation":"The yield keyword is used inside a function to create a generator that yields values lazily."},
{"id":238,"topic":"Generators","difficulty":"intermediate","question":"What happens when a generator function returns?","choices":["Stops iteration","Loops again","Raises ValueError","Starts over"],"answerIndex":0,"explanation":"When a generator function finishes, StopIteration is raised automatically."},
{"id":239,"topic":"Generators","difficulty":"intermediate","question":"What is the type of a generator object?","choices":["<class 'generator'>","<class 'function'>","<class 'iterator'>","<class 'object'>"],"answerIndex":0,"explanation":"Generator objects have the type 'generator', which supports iteration."},
{"id":240,"topic":"Exceptions","difficulty":"intermediate","question":"What is the purpose of the assert statement?","choices":["Handle errors","Check conditions during runtime","Pause code","Exit program"],"answerIndex":1,"explanation":"assert checks a condition and raises AssertionError if the condition is false."},
{"id":241,"topic":"Data Structures","difficulty":"intermediate","question":"What does dict.items() return?","choices":["A list of values","A view of key-value pairs","A tuple","A copy of dict"],"answerIndex":1,"explanation":"dict.items() returns a view object that yields (key, value) pairs."},
{"id":242,"topic":"Data Structures","difficulty":"intermediate","question":"What does zip([1,2],[3,4]) produce?","choices":["[(1,3),(2,4)]","[1,2,3,4]","{1:3,2:4}","Error"],"answerIndex":0,"explanation":"zip pairs items from iterables by position, forming tuples of matched items."},
{"id":243,"topic":"Data Structures","difficulty":"intermediate","question":"What is collections.Counter used for?","choices":["Count occurrences","Store numbers","Add lists","Time code"],"answerIndex":0,"explanation":"Counter is a dictionary subclass that counts occurrences of hashable items."},
{"id":244,"topic":"Data Structures","difficulty":"intermediate","question":"What does deque from collections provide?","choices":["Stack only","Queue with fast append/pop on both ends","Set operations","Tree structure"],"answerIndex":1,"explanation":"deque (double-ended queue) allows fast appends and pops from both ends efficiently."},
{"id":245,"topic":"Strings","difficulty":"intermediate","question":"What does 'Python'.find('y') return?","choices":["1","2","-1","Error"],"answerIndex":0,"explanation":"find() returns the lowest index of the substring if found, else -1. 'y' is at index 1."},
{"id":246,"topic":"Strings","difficulty":"intermediate","question":"What does 'abc'.join(['1','2','3']) return?","choices":["1abc2abc3","123","abc123","Error"],"answerIndex":0,"explanation":"The join() method joins list elements using the string as a separator."},
{"id":247,"topic":"Strings","difficulty":"intermediate","question":"What is the result of 'Python'.replace('Py','My')?","choices":["Python","Mython","PMython","Error"],"answerIndex":1,"explanation":"replace() substitutes all occurrences of the old substring with the new one."},
{"id":248,"topic":"Strings","difficulty":"intermediate","question":"Which method splits a string into a list by whitespace?","choices":["split()","partition()","strip()","cut()"],"answerIndex":0,"explanation":"split() without arguments splits a string using any whitespace as a delimiter."},
{"id":249,"topic":"Strings","difficulty":"intermediate","question":"What does 'abc'.upper().isupper() return?","choices":["True","False","Error","None"],"answerIndex":0,"explanation":"upper() converts to uppercase, and isupper() checks if all characters are uppercase."},
{"id":250,"topic":"Functions","difficulty":"intermediate","question":"What happens when default arguments are mutable (like lists)?","choices":["They reset every call","They persist changes across calls","They cause syntax error","They copy automatically"],"answerIndex":1,"explanation":"Default mutable arguments persist modifications between calls because they are evaluated once at function definition."}


]

